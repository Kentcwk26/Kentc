FUNCTION login()
    print("NEWLINE Welcome to Tenant Management System Login page. NEWLINE Please enter username and password to proceed.NEWLINE")
    chance=3
    WHILE chance>0
        PRINT("Enter username:")
        GET username
        PRINT("Enter password:")
        GET password
        OPEN "username.txt" IN READ AS userInfo
            userCheck = READ userInfo LINE-BY-LINE()
            FOR record in userCheck
                listRecord = SPLIT record INTO LIST SEPARATED BY ","
                IF username == listRecord LOCATION 0 THEN
                    IF password == listRecord LOCATION 1 THEN
                        print("NEWLINELogin successfulNEWLINE")
                        IF (username == "john" AND password == "1234u-78") OR (username == "david" AND password == "55467913"):
                            masterKey = TRUE
                        ELSE THEN
                            masterKey = FALSE
                        CALLFUNCTION menu(masterKey)
                        chance = 0
                        BREAKLOOP
                        ENDIF
                    ENDIF
                ELSE THEN
                    chance -= 1
                    PRINT("Error, incorrect username or password."NEWLINE ,chance,"chances remaining"NEWLINE)
                    BREAKLOOP
                ENDIF
            ENDFOR
        CLOSEFILE
    ENDWHILE
ENDFUNCTION

FUNCTION tenant(masterKey,UID)
    listCode = "t"
    IF masterKey == FALSE THEN
        CALLFUNCTION tenantSearch(UID)
    ELSE THEN
        PRINT("Current Tenant Data:")
        tenantRead()
        PRINT("[R]-inspect specific tenant NEWLINE [M]-Modify tenant data")
        GET opt
        IF opt IN ["R","r"] THEN
            CALLFUNCTION tenantSearch(details)
        ELSEIF opt IN ["M","m"] THEN
            modifyData(listCode)
        ENDIF
    ENDWHILE
ENDFUNCTION

FUNCTION transactionEntryForm()
ENDFUNCTION

FUNCTION log()
ENDFUNCTION

FUNCTION tenantRead()
    OPEN (tenant.txt) IN READ AS fTenant
        tenantList = READ fTenant LINE-BY-LINE
        FOR record IN tenantList
            PRINT(record RIGHTSTRIP(",") RIGHTSTRIP("NEWLINE"))
        ENDFOR
    CLOSEFILE
ENDFUNCTION

FUNCTION tenantEntryForm(tenantlist,n)
    PRINT("Number of new tenants: ")
    GET n
    for i in range(n)
        name = CALL FUNCTION getname()
        gender = CALLFUNCTION getgender()
        pNum = CALLFUNCTION getpNum()
        nationality = CALLFUNCTION getnationality()
        startDate = CALLFUNCTION getstartDate()
        income = CALLFUNCTION getincome()
        status = CALLFUNCTION getstatus()
        APPEND [name,gender,pNum,nationality,startDate,income,status] TO tenantList
    RETURN tenantList
ENDFUNCTION

FUNCTION tenantDelete(recordName, recordNum)
    OPEN "tenant.txt" IN READ AS Thandler
        READ Thandler
        Thandler STRIP (",") 
        FOR record from list
            FOR item in record
ENDFUNCTION

FUNCTION tenantSearch(details):
    OPEN "tenant.txt" IN READ AS TSearch
        READ TSearch
        TSearch STRIP (",")
        list = JOIN TSearch INTO string(",")
        FOR record IN list
            IF record STARTS WITH details THEN
                PRINT("Found record", record RIGHTSTRIP(",") RIGHTSTRIP(""))
            ENDIF
        ENDFOR
    CLOSEFILE
ENDFUNCTION

FUNCTION getname()
    WHILE TRUE
        PRINT("Enter tenant name: Firstname Familyname Lastname"NEWLINE)
        GET name
        nameCheck = name
        SPLIT nameCheck INTO LIST WITH ","
        FOR words IN nameCheck
            IF words LOCATION 0 IS UPPERCASE THEN
                BREAKLOOP
            ELSE THEN
                code = 2
                CALLFUNCTION message(code)
            ENDIF
        ENDFOR
    ENDWHILE
    RETURN name
ENDFUNCTION

FUNCTION getgender()
    PRINT("Enter tenant gender: (m/f):NEWLINE")
    GET gender
    genderCheck = gender
    IF genderCheck LENGTH == 1 THEN
        IF genderCheck IS NOT A NUMBER THEN
            BREAKLOOP
        ELSE THEN
            code = 1
            CALLFUNCTION message(code)
    ELSE THEN
        code = 3
        CALLFUNCTION message(code)
    RETURN gender
ENDFUNCTION

FUNCTION getpNum():
    PRINT("Enter tenant phone number: (############):NEWLINE")
    GET pNum
    pNumCheck=pNum
    FOR digit IN pNum
        IF digit IS INTEGER THEN
            BREAKLOOP
        ELSE THEN
            code = 1
            CALLFUNCTION message(code)
        ENDIF
    ENDFOR
    RETURN pNum
ENDFUNCTION

FUNCTION getnationality():
    PRINT("Enter tenant nationality: (M: Malaysian/N: non-Malaysian):NEWLINE")
    GET nationality
    nationality = nationalityCheck
    IF nationalityCheck LENGTH = 1 THEN
        BREAKLOOP
    ELSE THEN 

    RETURN nationality
ENDFUNCTION

FUNCTION getstartDate():
    PRINT("Enter Rental start date: (YYYY,MM,DD):NEWLINE")
    GET startDate
    RETURN startDate
ENDFUNCTION

FUNCTION getincome():
    PRINT("Enter tenant income range(RM):NEWLINE")
    GET income
    RETURN income
ENDFUNCTION

FUNCTION getstatus():
ENDFUNCTION

FUNCTION appendFile(list, listCode)
    IF listCode == "t" THEN
        OPEN "tenant.txt" IN APPEND AS TAppend
            FOR record FROM list
                FOR item IN record
                    WRITE item TO TAppend
                    WRITE "NEWLINE" TO TAppend
                WRITE "NEWLINE" TO TAppend
        CLOSEFILE
    ELSEIF listCode == "a" THEN
        OPEN "Apartment.txt" IN APPEND AS AAppend
            for record from list
                for item in record
                    WRITE item TO AAppend
                    WRITE "NEWLINE" TO AAppend
                WRITE "NEWLINE" TO AAppend
        CLOSEFILE
    ELSE THEN
        OPEN "transaction.txt" IN APPEND AS PAppend
            for record from list
                for item in record
                    WRITE item TO PAppend
                    WRITE "NEWLINE" TO PAppend
                WRITE "NEWLINE" TO PAppend
ENDFUNCTION

FUNCTION readFile(listCode):
    IF listCode == t:
        OPEN "tenant.txt" IN READ AS Thandler:
            FOR record FROM Ahandler:
                PRINT(record RIGHTSTRIP() RIGHTSTRIP(","))

    ELSE:
        OPEN "Apartment.txt" IN READ AS Ahandler:
            FOR record FROM Ahandler:
                PRINT(record RIGHTSTRIP() RIGHTSTRIP(","))
ENDFUNCTION

FUNCTION message(code)
    IF code == 0 THEN
        PRINT("Incorrect input")
    ELSEIF code == 1 THEN
        PRINT("Incorrect data type present")
    ELSEIF code == 2 THEN
        PRINT("Format error")
    ELSEIF code == 3 THEN
        PRINT("Length error")
    PRINT("Please try again.")
ENDFUNCTION

FUNCTION transactionEntryForm()
ENDFUNCTION

FUNCTION log()
ENDFUNCTION
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

FUNCTION adminApartment():
    
    DECLARE record AS ARRAY

    START
        PRINT("NEWLINE Apartment Info: NEWLINE")

        SET list1=[["Standard Room (Triple)"],["Code: SR1"],["Dimensions: 140+ sqft"],["Pricing: RM350"],["Number of Rooms: 20"],["Apartment ID: A01-L1-R1 to A01-L1-R21"]]
        SET list2=[["Standard Room (Twin)"],["Code: SR2"],["Dimensions: 120+ sqft"],["Pricing: RM450"],["Number of Rooms: 20"],["Apartment ID: A01-L1-R22 to A01-L1-R41"]]
        SET list3=[["Standard Room A/C (Triple)"],["Code: SR3"],["Dimensions: 150+ sqft"],["Pricing: RM550"],["Number of Rooms: 20"],["Apartment ID: A01-L2-R1 to A01-L2-R21"]]
        SET list4=[["Standard Room A/C (Twin)"],["Code: SR4"],["Dimensions: 130+ sqft"],["Pricing: RM650"],["Number of Rooms: 20"],["Apartment ID: A01-L2-R22 to A01-L2-R41"]]
        SET list5=[["Deluxe Room (Triple)"],["Code: DR1"],["Dimensions: 170+ sqft"],["Pricing: RM750"],["Number of Rooms: 20"],["Apartment ID: A01-L4-R1 to A01-L4-R21"]]
        SET list6=[["Deluxe Room (Twin)"],["Code: DR2"],["Dimensions: 160+ sqft"],["Pricing: RM840"],["Number of Rooms: 20"],["Apartment ID: A01-L4-R22 to A01-L4-R41"]]
        SET list7=[["Deluxe Room A/C with shared attached bath / toilet (Triple)"],["Code: DR3"],["Dimensions: 180+ sqft"],["Pricing: RM950"],["Number of Rooms: 20"],["Apartment ID: A01-L3-R1 to A01-L3-R21"]]
        SET list8=[["Deluxe Room A/C with shared attached bath / toilet"],["Code: DR4"],["Dimensions: 170+ sqft"],["Pricing: RM1040"],["Number of Rooms: 20"],["Apartment ID: A01-L3-R22 to A01-L3-R41"]]
        SET list9=[["Compact Premium Single"],["Code: CPS"],["Dimensions: 130+ sqft"],["Pricing: RM690"],["Number of Rooms: 20"],["Apartment ID: A01-L5-R1 to A01-L5-R41"]]
        SET list10=[["Medium Premium Single"],["Code: MPS"],["Dimensions: 150+ sqft"],["Pricing: RM750"],["Number of Rooms: 20"],["Apartment ID: A02-L1-R1 to A02-L1-R21"]]
        SET list11=[["Medium Premium Twin"],["Code: MPT"],["Dimensions: 180+ sqft"],["Pricing: RM890"],["Number of Rooms: 20"],["Apartment ID: A02-L2-R1 to A02-L2-R21"]]
        SET list12=[["Medium Premium with attached bath / toilet (Twin)"],["Code: MP1"],["Dimensions: 180+ sqft"],["Pricing: RM940"],["Number of Rooms: 20"],["Apartment ID: A02-L3-R1 to A02-L3-R21"]]
        SET list13=[["Medium Premium with attached bath / toilet (Single)"],["Code: MP2"],["Dimensions: 160+ sqft"],["Pricing: RM1050"],["Number of Rooms: 20"],["Apartment ID: A02-L3-R22 to A02-L3-R41"]]
        SET list14=[["En-Suite Single (Super Premium - Triple)"],["Code: ESS3"],["Dimensions: 160+ sqft"],["Pricing: RM700"],["Number of Rooms: 20"],["Apartment ID: A02-L4-R1 to A02-L4-R41"]]
        SET list15=[["En-Suite Single (Super Premium - Twin)"],["Code: ESS2"],["Dimensions: 140+ sqft"],["Pricing: RM800"],["Number of Rooms: 20"],["Apartment ID: A02-L4-R1 to A02-L4-R41"]]
        SET list16=[["En-Suite Twin (Super Premium)"],["Code: EST2"],["Dimensions: 200+ sqft"],["Pricing: RM900"],["Number of Rooms: 20"],["Apartment ID: A02-L5-R1 to A02-L5-R41"]]
        APPEND [list1,list2,list3,list4,list5,list6,list7,list8,list9,list10,list11,list12,list13,list14,list15,list16] IN record

    OPEN "Apartment.txt" IN WRITE AS Ahandler
        for item in record:
            for data in item:
                for element in data:
                    WRITE element TO Ahandler
                WRITE ", " TO Ahandler
            WRITE "NEWLINE" TO Ahandler
    CLOSE Apartment.txt

    OPEN "Apartment.txt" IN READ AS Ahandler
        for item in Ahandler:
            PRINT(item,RIGHTSTRIP() RIGHTSTRIP(","))
    CLOSE Apartment.txt

    CALLFUNCTIONmodifydata()
ENDFUNCTION

FUNCTION modifyData(listCode):
    DECLARE list AS ARRAY
    DECLARE dataInput AS INTEGER
    WHILE TRUE
        PRINT("NEWLINE 1. Add data NEWLINE 2. Edit Data NEWLINE 3. Delete Data NEWLINE 4. Exit NEWLINE")
        PRINT("Please select which operation: ")
        GET dataInput
        list = []
        IF dataInput == 1 THEN
            PRINT("NEWLINE Add Data NEWLINE")
            IF listCode == "a" THEN
                CALLFUNCTION apartmentAddData()
            ELSEIF listCode == "t" THEN
                list = CALLFUNCTION tenantEntryForm(list)
            ELSE THEN
                CALLFUNCTION transactionEntryForm()
        appendFile(list,listCode)

        ELSEIF dataInput==2 THEN
            PRINT("NEWLINE Edit Data NEWLINE")
            IF listCode == "a" THEN
                CALLFUNCTION apartmentEditData()
            ELSEIF listCode == "t" THEN
                CALLFUNCTION tenantEdit()
            ELSE THEN
                CALLFUNCTION transactionEdit()

        ELSEIF dataInput==3 THEN
            PRINT("NEWLINE Delete Data NEWLINE")
            IF listCode == "a" THEN
                CALLFUNCTION apartmentDeleteData()
            ELSEIF listcode == "t" THEN
                CALLFUNCTION tenantDelete()
            ELSE THEN
                CALLFUNCTION transactionDelete()

        ELSE IF dataInput==4 THEN
            PRINT("Exit")
            RETURN False
        ELSE THEN
            code = 0
            message(code)
        ENDIF
    ENDWHILE
ENDFUNCTION

FUNCTION apartmentAddData():
    
    WHILE TRUE:
        DECLARE addDataNum,newapartmentnumberofrooms,addDataConfirmation,rewriteDataConfirmation,addDataConfirmation2 AS INTEGER
        DEFINE adddata AS ARRAY

        PRINT("NEWLINE Dear admin, how many data are you gonna insert today?")
        GET adddatanum
        PRINT("NEWLINE Now, you are required to enter the new data NEWLINE")

        FOR i FROM 0 TO addDataNum

            PRINT("Apartment: ")
            GET newapartment
            PRINT("Code: ")
            GET newapartmentcode
            PRINT("Dimension (in range): ")
            GET newapartmentdimension
            PRINT("Pricing in RM:")
            GET newapartmentpricing
            PRINT("Number of rooms: ")
            GET newapartmentnumberofrooms
            PRINT("Apartment ID: ")
            GEt newapartmentID
            APPEND [newapartment,newapartmentcode,newapartmentdimension,newapartmentpricing,newapartmentnumberofrooms,newapartmentID] TO adddata
            PRINT(NEWLINE, adddata, NEWLINE)

        ENDFOR

        PRINT("Are you sure with the records you inserted just now? Enter '1' to save record, Enter '0' to unsave record: )
        GET addDataConfirmation

        IF addDataConfirmation == 1 THEN

            OPEN "Apartment.txt" IN WRITE AS Ahandler
                FOR item FROM adddata:
                    FOR data FROM item:
                        FOR information FROM data:
                            WRITE information TO Ahandler
                        WRITE ", " TO Ahandler
                    WRITE "NEWLINE" TO Ahandler
            CLOSE FILE
            PRINT("NEWLINE Data Saved NEWLINE ")
            PRINT("Are you going to add more data? Yes/No")
            GET addDataConfirmation2
            IF addDataConfirmation2 == 'Yes' THEN
                PRINT("NEWLINE Return to main menu")
                RETURN FALSE

            ELSE IF addDataConfirmation2 == 'No' THEN
                RETURN TRUE

            ELSE
                code = 0
                CALLFUNCTION message(code)

            ENDIF

        ELSEIF addDataConfirmation == 0 THEN

            PRINT("NEWLINE Enter 'W' to rewrite the data again, Enter any key to exit: ")
            GET rewriteDataConfirmation
            IF rewriteDataConfirmation == 'W' THEN
                RETURN TRUE
            ELSE:
                PRINT("Return to main menu....")
                RETURN FALSE
            ENDIF

        ELSE THEN
            code = 0
            CALLFUNCTION message(code)
            RETURN TRUE
        ENDIF
    ENDWHILE
ENDFUNCTION

FUNCTION apartmentEditData():

    DECLARE deletedataconfirmation,deletedataconfirmationpt1,deletedataconfirmationpt2,deletedataconfirmationpt3 AS INTEGER
        
    PRINT("Dear admin, you are required to read this message below NEWLINE Please noted that the selected data from record will permanently delete the selected record NEWLINE")
    PRINT("NEWLINE Insert 'Y' to continue the progress, and 'N' to exit: ")
    GET editdataconfirmationpt1
    
    IF editdataconfirmationpt1 == 'Y' THEN
        WHILE TRUE
            PRINT("NEWLINE Now, NEWLINE First, please select the record that you decide to delete from above: ")
            GET editdatainformation
            OPEN "Apartment.txt" IN READ AS Ahandler
            FOR record FROM Ahandler
                PRINT(NEWLINE record)
            CLOSE FILE
            PRINT("NEWLINE [R]-Room Type, [C]-Apartment Code, [D]-Dimensions, [P]- Pricing, [N]- Number of rooms, [A]- Apartment ID")
            PRINT("NEWLINE Next, please select the data type based on the above statement: ")
            GET datatype
            IF datatype == 'R' THEN
                apartmentdatatype = 0
            ELSE IF datatype == 'C' THEN
                apartmentdatatype = 1
            ELSE IF datatype == 'D' THEN
                apartmentdatatype = 2
            ELSE IF datatype == 'P' THEN
                apartmentdatatype = 3
            ELSE IF datatype == 'N' THEN
                apartmentdatatype = 4
            ELSE IF datatype == 'A' THEN
                apartmentdatatype= 5
            ELSE
                code = 0
                CALLFUNCTION message(code)
            ENDIF

            OPEN "Apartment.txt" IN READ AS Ahandler
            FOR item IN Ahandler
                PRINT(item,RIGHTSTRIP() RIGHTSTRIP(","))
            ENDFOR
            CLOSE FILE
            
            PRINT("Please insert the data that you want to edit: ")
            GET olddata

            PRINT("NEWLINE The last step, please insert the new data: ")
            GET newdata
            PRINT("NEWLINE Are you sure with the data that you inserted just now? Yes/No")
            GET deletedataconfirmation

            IF confirmation == 'Yes' THEN
                OPEN "Apartment.txt" IN WRITE AS Ahandler
                    FOR record FROM Ahandler:
                        itemstripped = record RIGHTSTRIP(",") RIGHTSTRIP("NEWLINE")
                        datasplited = SPLIT strippeditem INTO LIST(",")
                        IF datatype IN datasplited[num] THEN
                            REPLACE olddata TO newdata INTO record
                        PRINT("NEWLINE Results: NEWLINE",record NEWLINE Data Saved)
                    ENDFOR
                CLOSEFILE
                PRINT("Enter any key to exit, Enter 'C' again to edit more data: ")
                GET deletedataconfirmationpt3
                    IF deletedataconfirmationpt3 == 'C' THEN
                        RETURN TRUE
                    ELSE
                        PRINT("Return to main menu")
                        RETURN FALSE
                    ENDIF

            ELSE IF confirmation == 'No' THEN
                RETURN TRUE
                
            ELSE THEN
                code = 0
                CALLFUNCTION message(code)
                RETURN FALSE

            ENDIF

    ELSE IF editdataconfirmationpt1 == 'N' THEN
        RETURN FALSE

    ELSE
        code = 0
        CALLFUNCTION message(code)
        RETURN FALSE
    ENDIF
ENDFUNCTION

FUNCTION apartmentDeleteData()
    DECLARE deletedataconfirmationpt1,deletedataconfirmationpt2 AS INTEGER
    OPEN "Apartment.txt" IN READ AS Ahandler
        for item in Ahandler:
            PRINT(item,RIGHTSTRIP() RIGHTSTRIP(","))
        ENDFOR
    CLOSEFILE
    PRINT("NEWLINE Dear admin, please noted that the selected data from record will permanently delete the selected record")
    PRINT("NEWLINE Insert 'Y' to continue the progress, and 'N' to exit: ")
    GET deletedataconfirmationpt1
ENDFUNCTION

FUNCTION searchbox():

    DECLARE option,num,code AS INTEGER
    DECLARE opt,list AS STRING
    DECLARE returnList AS ARRAY
    PRINT("NEWLINE Welcome to search box!")
    WHILE TRUE
        PRINT("NEWLINE 1. Search room specific details NEWLINE 2. Search transaction details NEWLINE 3. Search specific tenant details NEWLINE NEWLINE 4. Exit search box NEWLINE")
        PRINT("Please type the search number based on the listing above: ")
        GET option
        PRINT("NEWLINE Please type the search criteria based on the keywords below:")
        IF option == 1 THEN
            listCode = "a"
            PRINT("NEWLINE [A]-Apartment code, [P]-Pricing")
            GET opt

            IF opt IN ["A","a"] THEN
                PRINT("NEWLINE SR1,SR2,SR3,SR4,DR1,DR2,DR3,DR4,CPS,MPS,MPT,MP1,MP2,ESS3,ESS2,EST2.... NEWLINE Please enter the apartment code to begin the search: ")
                num = 1

            ELSEIF opt IN ["P","p"] THEN
                PRINT("NEWLINE RM350,RM450,RM550,RM650,RM690,RM700,RM750,RM800,RM840,RM890,RM900,RM940,RM950,RM1040,RM1050.... NEWLINE Please enter the pricing to begin the search: ")
                num = 3
            
            ELSE:
                code = 0
                CALLFUNCTION message(code)
            ENDIF

        ELSEIF option == 2 THEN
            listCode = "p"
            PRINT("NEWLINE [R]-Reference number,[D]-Transaction date,[T]-TenantID,[A]-Apartment code,[S]-Amount")
            GET opt
            IF opt IN ["R","r"] THEN
                num = 0
            IF opt IN ["D","d"] THEN
                num = 1
            IF opt IN ["T","t"] THEN
                num = 2
            IF opt IN ["A","a"] THEN
                PRINT("NEWLINE SR1,SR2,SR3,SR4,DR1,DR2,DR3,DR4,CPS,MPS,MPT,MP1,MP2,ESS3,ESS2,EST2.... NEWLINE Please enter the apartment code to begin the search: ")
                num = 3
            IF opt IN ["S","s"] THEN
                num = 4
            ELSE THEN
                code = 0
                CALLFUNCTION message(code)
            ENDIF

        ELSEIF option == 3 THEN
            listCode = "t"
            PRINT("NEWLINE [N]-Name,[G]-Gender,[P]-Phone number,[R]-Nationality,[D]-Rental start date,[I]-Income,[S]-Tenant status)
            GET opt 
            IF opt IN ["N","n"] THEN
                num = 0
            ELSEIF opt IN ["G","g"] THEN
                num = 1
            ELSEIF opt IN ["P","p"] THEN
                num = 2
            ELSEIF opt IN ["R","r"] THEN
                num = 3
            ELSEIF opt IN ["D","d"] THEN
                num = 4
            ELSEIF opt IN ["I","i"] THEN
                num = 5
            ELSEIF opt IN ["S","s"] THEN
                num = 6
            ELSE:
                code = 0
                CALLFUNCTION message(code)
            ENDIF

        ELSEIF option == 4 THEN

            PRINT(" NEWLINE Return to main menu NEWLINE NEWLINE --------------------------- ")
            RETURN FALSE

        ELSE:
            code = 0
            CALLFUNCTION message(code)
        ENDIF
        returnList = CALLFUNCTION searchinformation(listCode,num)
        IF returnList THEN
            PRINT(returnList)
        ELSE THEN
            PRINT("Record does not exist")
        ENDIF
ENDFUNCTION

FUNCTION searchinformation(listCode,num)
    DECLARE searchInformation AS INTEGER
        IF listCode == "p" THEN
        l="transaction.txt"
    ELSEIF listCode=="a" THEN
        l="apartment.txt"
    ELSE THEN
        l="apartment.txt"
    WHILE TRUE
        PRINT("Select and enter text to begin search: ")
        GET searchInformation
        OPEN l IN READ AS Xhandler
            FOR record FROM Xhandler:
                strippeditem = record RIGHTSTRIP(",") RIGHTSTRIP("NEWLINE")
                data = SPLIT strippeditem INTO LIST(",")
                IF searchInformation IN data[num]:
                    PRINT("NEWLINE Results: NEWLINE",record)
                ENDIF
            ENDFOR
        CLOSEFILE
        PRINT("Exit program? Enter any key to exit, Enter 'C' to continue.")
        GET exitSearch
        IF exitSearch IN ["C","c"] THEN
            CONTINUELOOP
        ELSE THEN
            RETURN FALSE
        ENDIF
    ENDWHILE
ENDFUNCTION

FUNCTION menu(masterKey)
    PRINT("NEWLINE - Welcome, you are now entering Tenant Management System -")

    WHILE TRUE
        PRINT("NEWLINE [S]-Search box NEWLINE Review information about: NEWLINE)
        IF masterKey == FALSE THEN
            PRINT("[A]-Apartment NEWLINE [P]-Transaction NEWLINE [T]-My Tenant details NEWLINE NEWLINE [D]-Print my House and Tenant Details NEWLINE [E]-Exit NEWLINE ")
        
        ELSE THEN
            PRINT("[A]-Apartment NEWLINE [P]-Transaction NEWLINE [T]-Tenant NEWLINE NEWLINE [D]-Print Specific House & Tenant Details NEWLINE [I]-Inquiry of Past Tenant Details NEWLINE [L]-Login History NEWLINE [E]- Exit NEWLINE")
        
        PRINT("Please select which operation that you want to do: ")
        GET opt
        
        IF opt IN ["S","s"] THEN

            CALLFUNCTION searchbox()

        ELSEIF opt IN ["A","a"] THEN
            IF masterKey == FALSE THEN
                CALLFUNCTION tenantApartment()
            ELSE THEN 
                CALLFUNCTION adminApartment()
        
        ELSEIF opt IN ["P","p"] THEN
            CALLFUNCTION transaction(masterKey)

        ELSEIF opt IN ["T","t"] THEN
            CALLFUNCTION tenant(masterKey)
            
        ELSEIF opt IN ["D","d"] THEN
            CALLFUNCTION tenantAndApartment()
        
        ELSEIF opt in ["I","i"] AND masterKey == TRUE THEN
            details = "past"
            CALLFUNCTION tenantSearch(details)

        ELSEIF opt in ["L","l"] AND masterKey == TRUE THEN
            CALLFUNCTION loginHistory()

        ELSEIF opt IN ["E","e"] THEN

            PRINT("NEWLINE Thank you for using, have a nice day~ NEWLINE")
            RETURN FALSE

        ELSE:

            code = 3
            CALLFUNCTION message(code)
        ENDIF
    ENDWHILE
ENDFUNCTION


BEGIN
IMPORT datetime AS dt
CALLFUNCTION login()
END